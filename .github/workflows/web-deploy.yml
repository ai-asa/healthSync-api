name: Deploy Web to Firebase Hosting

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/web/**'
      - 'packages/shared/**'
      - '.github/workflows/web-deploy.yml'
      - 'package.json'
      - 'package-lock.json'
  workflow_dispatch:

jobs:
  build_and_deploy:
    name: Build and Deploy Web
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm install
          cd apps/web
          npm install
      
      - name: Build
        run: cd apps/web && npm run build
        env:
          # Firebase設定 
          VITE_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          
          # LINE OAuth設定
          VITE_LINE_CHANNEL_ID: ${{ secrets.LINE_CHANNEL_ID }}
          VITE_LINE_CHANNEL_SECRET: ${{ secrets.LINE_CHANNEL_SECRET }}
          VITE_LINE_CALLBACK_URL: ${{ secrets.LINE_CALLBACK_URL }}
          
          # 環境設定
          VITE_ENV: production
          VITE_USE_MOCK: 'false'
          
      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          channelId: live
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
          entryPoint: './apps/web'