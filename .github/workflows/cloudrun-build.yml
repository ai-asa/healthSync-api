name: Deploy Firebase Backend to Cloud Run

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/api/firebase-backend/**'
      - '.github/workflows/cloudrun-build.yml'
  workflow_dispatch:

env:
  PROJECT_ID: line-bot-407102
  SERVICE: zerocon-firebase-backend
  REGION: asia-northeast1
  REPOSITORY_NAME: zerocon-web-ui-firebase

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    concurrency:
      group: firebase-backend-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: 'Login to Artifact Registry'
        uses: 'docker/login-action@v3'
        with:
          registry: ${{ env.REGION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }}

      - name: 'Build and Push Container'
        run: |-
          IMAGE_URI="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"
          docker build -t "$IMAGE_URI" .
          docker push "$IMAGE_URI"
        working-directory: apps/api/firebase-backend

      - name: 'Deploy to Cloud Run'
        run: |-
          IMAGE_URI="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"
          gcloud run deploy ${{ env.SERVICE }} \
            --image "$IMAGE_URI" \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --timeout 300s \
            --set-env-vars "^@^ALLOWED_ORIGINS=${{ secrets.ALLOWED_ORIGINS }}@FIREBASE_PROJECT_ID=${{ env.PROJECT_ID }}@OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}"

      - name: 'Display service URL'
        run: |
          echo "Service deployed to:"
          gcloud run services describe ${{ env.SERVICE }} --region ${{ env.REGION }} --format 'value(status.url)'